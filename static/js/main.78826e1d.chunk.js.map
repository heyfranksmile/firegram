{"version":3,"sources":["firebase/config.js","hooks/useFirestore.js","components/ImageGrid.js","components/Modal.js","components/Title.js","hooks/useStorage.js","components/layout/ProgressBar.js","components/UploadForm.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","appStorage","storage","appFirestore","firestore","timestamp","FieldValue","serverTimestamp","useFirestore","collection","useState","docs","setDocs","useEffect","orderBy","onSnapshot","snapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImage","className","map","url","div","layout","whileHover","opacity","key","onClick","img","src","alt","initial","animate","transition","delay","Modal","selectedImage","imgRef","useRef","e","target","current","ref","y","Title","require","useStorage","file","console","log","progress","setProgress","error","setError","setUrl","storageRef","name","collectionRef","put","on","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","width","UploadForm","errMsg","setErrMsg","permittedFiles","type","onChange","userFile","files","includes","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78826e1d.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport '@firebase/storage';\r\nimport '@firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: 'AIzaSyAmUrBk9HNFFqbrQX_W8lalZiIu2YX9MBs',\r\n  authDomain: 'firegram-be72d.firebaseapp.com',\r\n  projectId: 'firegram-be72d',\r\n  storageBucket: 'firegram-be72d.appspot.com',\r\n  messagingSenderId: '315682376024',\r\n  appId: '1:315682376024:web:ea5997ac572d4dc046fd2d',\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst appStorage = firebase.storage(); //invoking it initiates our storage service\r\nconst appFirestore = firebase.firestore(); //initiates database service\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp; //evaluates to a function that will create a timestamp\r\n\r\nexport { appStorage, appFirestore, timestamp };\r\n","import { useEffect, useState } from 'react';\r\nimport { appFirestore } from '../firebase/config';\r\n\r\nconst useFirestore = (collection) => {\r\n  const [docs, setDocs] = useState([]);\r\n  useEffect(() => {\r\n    const unsub = appFirestore\r\n      .collection(collection)\r\n      .orderBy('createdAt', 'desc')\r\n      .onSnapshot((snapshot) => {\r\n        let documents = [];\r\n        snapshot.forEach((doc) => {\r\n          documents.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        setDocs(documents);\r\n      });\r\n    return unsub;\r\n  }, [collection]);\r\n\r\n  return { docs };\r\n};\r\n\r\nexport default useFirestore;\r\n","import React from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ImageGrid = ({ setSelectedImage }) => {\r\n  const { docs } = useFirestore('images');\r\n  return (\r\n    <div className=\"img-grid\">\r\n      {docs &&\r\n        docs.map(({ id, url }) => (\r\n          <motion.div\r\n            layout\r\n            whileHover={{ opacity: 1 }}\r\n            className=\"img-wrap\"\r\n            key={id}\r\n            onClick={() => setSelectedImage(url)}\r\n          >\r\n            <motion.img\r\n              src={url}\r\n              alt=\"uploaded pic\"\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ delay: 1 }}\r\n            />\r\n          </motion.div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageGrid;\r\n","import { motion } from 'framer-motion';\r\nimport React, { useRef } from 'react';\r\nconst Modal = ({ setSelectedImage, selectedImage }) => {\r\n  const imgRef = useRef(null);\r\n\r\n  const closeModal = (e) =>\r\n    e.target !== imgRef.current && setSelectedImage(null);\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"backdrop\"\r\n      onClick={closeModal}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n    >\r\n      <motion.img\r\n        ref={imgRef}\r\n        src={selectedImage}\r\n        alt=\"selected img\"\r\n        initial={{ y: '-100vh' }}\r\n        animate={{ y: 0 }}\r\n      />\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FireGram</h1>\n      <h2>Your Pictures</h2>\n      <p>All in One Place.</p>\n    </div>\n  );\n};\n\nexport default Title;\n","const { useState, useEffect } = require('react');\r\nconst { appStorage, timestamp, appFirestore } = require('../firebase/config');\r\n\r\nconst useStorage = (file) => {\r\n  console.log('useStorage called');\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log('CH useEffect called');\r\n    const storageRef = appStorage.ref(file.name);\r\n    const collectionRef = appFirestore.collection('images');\r\n\r\n    storageRef.put(file).on(\r\n      'state_changed',\r\n      ({ bytesTransferred, totalBytes }) => {\r\n        setProgress((bytesTransferred / totalBytes) * 100);\r\n        console.log('progress state changed');\r\n      },\r\n      (err) => {\r\n        setError(err);\r\n      },\r\n      async () => {\r\n        console.log('upload complete + url state to change');\r\n        let url = await storageRef.getDownloadURL();\r\n        const createdAt = timestamp();\r\n        collectionRef.add({ url, createdAt });\r\n        setUrl(url);\r\n      }\r\n    );\r\n  }, [file]);\r\n\r\n  console.log('stuff returned');\r\n  return { progress, error, url };\r\n};\r\n\r\nexport default useStorage;\r\n","import { motion } from 'framer-motion';\r\nimport React, { useEffect } from 'react';\r\nimport useStorage from '../../hooks/useStorage';\r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n  const { progress, url } = useStorage(file);\r\n  console.log(progress, url);\r\n\r\n  useEffect(() => {\r\n    console.log('<ProgressBar /> useEffect called');\r\n    url && setFile(null);\r\n    //eslint-disable-next-line\r\n  }, [url]);\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"progress-bar\"\r\n      initial={{ width: 0 }}\r\n      animate={{ width: `${progress}%` }}\r\n    ></motion.div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React, { useState } from 'react';\r\nimport ProgressBar from './layout/ProgressBar';\r\n\r\nconst UploadForm = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [errMsg, setErrMsg] = useState('');\r\n\r\n  const permittedFiles = ['image/png', 'image/jpeg'];\r\n  const changeHandler = (e) => {\r\n    let userFile = e.target.files[0];\r\n    if (userFile && permittedFiles.includes(userFile.type)) {\r\n      setFile(userFile);\r\n      setErrMsg('');\r\n    } else {\r\n      setFile(null);\r\n      setErrMsg('Please choose an image file (.png or .jpeg)');\r\n    }\r\n  };\r\n  return (\r\n    <form>\r\n      <label>\r\n        <input type=\"file\" onChange={changeHandler} />\r\n        <span>+</span>\r\n      </label>\r\n\r\n      <div className=\"output\">\r\n        {errMsg && <div className=\"error\">{errMsg}</div>}\r\n        {file && <div>{file.name}</div>}\r\n        {file && <ProgressBar file={file} setFile={setFile} />}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n","import React, { useState } from 'react';\nimport ImageGrid from './components/ImageGrid';\nimport Modal from './components/Modal';\nimport Title from './components/Title';\nimport UploadForm from './components/UploadForm';\n\nfunction App() {\n  const [selectedImage, setSelectedImage] = useState(null);\n  return (\n    <div className=\"App\">\n      <Title />\n      <UploadForm />\n      <ImageGrid setSelectedImage={setSelectedImage} />\n      {selectedImage && (\n        <Modal\n          selectedImage={selectedImage}\n          setSelectedImage={setSelectedImage}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}